**? marks the questions I had to look up**

Q: What is the default branch of a git repository called?
A: main (master)

Q: How do you change branches using git?
A: git checkout <branch>

Q: What is the command that allows you to create a local repository from a remote repository?
A: git clone <git-link>

Q: How do you check the status of the working directory of the local repository?
A: git status

Q: What sequence of commands allows me to share new changes in a local repository with an (already configured) remote repository?
A: git add .; git commit -m 'some info'; git push

Q: What is the value of the expression (true && false)?
A: false

Q: How can you write `i = i + 1` more concisely?
A: i++

Q: What does the term "concatenation" mean?
A: concatenate - append several values to each other

Q: Why is the check for "equals" with (object == object) not reliable? What should you use for check of equal objects?
A: Because this only compares the object in memory and not the values of the objects. Instead use "object1.equals(object2)".

Q: What Collection implementation is ordered, but not sorted?
A: ? List

Q: What Collection implementation has only unique elements?
A: ? Set

Q: How can we find out the number of elements of an array named "students"?
A: ? students.length

Q: How can we find out the number of elements of a list named "students"?
A: ? students.size()

Q: In Java, what happens if I divide by Zero (eg. 8 / 0)?
A: ? Error/Exception: java.lang.ArithmeticException: / by zero

Q: How can you check if File quiz = new File("quiz.txt") exists?
A: if(quiz.exists()) {}

Q: Depending on some attributes, an object should return isAllowed(). Should the method be static or not, why?
A: static - because there are no dependencies to any class from which an object would have to be created beforehand if it is not static 

Q: What is the signature of the `main` method of a class?
A: public static void main(String[] args) 

Q: What is an instance of a class?
A: A reference to an object of the class

Q: Which naming rule should you apply to the naming of a class?
A: The name should be the same as the file name of the class with the first letter capitalised and Camel notation.

Q: Why should the usage of java.util.Date be avoided?
A: ? java.util.Date has some serious design flows. It doesnâ€™t have a time zone, format and calendar system. (https://programminghints.com/2017/05/still-using-java-util-date-dont/)

Q: What Java class do you use to store the Date "31.10.2021"?
A: ? SimpleDateFormat - "SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");"

Q: What is the advantage of using Generics?
A: ? Instead of writing a large number of specific classes for repetitive tasks, we can now write a single class and reuse.
